#------ IF SETTING UP FROM SCRATCH -----#
# Configure git credentials
λ git config --global user.name jheyer23
λ git config --global user.email jheyer2325@gmail.com
λ git config user.name

####!!!!! SET UP LOCAL REPOSITORY #####!!!!!!!!
1. Go to GITHUB
2. Create new repository
3. Clone repository to local directory
git clone https://github.com/jheyer23/python_gdal.git
4. You can then change directory to repository and push from the repository to git


#----- Step 1. SET LOCAL DIRECTORY ------#
# Have to change local directory to location of local files
λ cd D:\GitHub\git1

# If using Atoms for editing of files then need to "add project folder"
# For example, "add project folder" to D:\GitHub\git1
# Then commit and push/pull files to git from this local folder

#----- Step 2. CREATE REPOSITORY & SET GIT ORIGIN ------#
# Create a repository in Git to push files from local directory to
# Remove origin - repository where files are pushed to
λ git remote rm origin
# Create a repository in GitHub and connect to this git repository
λ git remote add origin https://github.com/jheyer23/python.git
# Configure/set repository created as master/repository where files are pushed to
λ git config master.remote origin
dasdfasdf
#----- Step 3. INITIALIZE ------#

# Initialize git repository .git folder in worktree
λ git init

## Add all files that have been modified in local directory to staging areas
λ git add .

#----- Step 4. STAGING ------#

## Commit files in staging area
## -m ""   allows us to pass descriptive message about what commit is
λ git commit -m ""

## See status of file in staging to see if it has been committed
λ git status

## Get id of commits:
## Added to commit history
## All yellow lines are different commits
λ git log

## Show all different commits condensed to one line
λ git log --oneline

#----- Step 5. ------#
## Push files in this repository to GitHub git repository
λ git push -u origin master

#----- PULL REPOSITORY FROM GITHUB ------#
λ git clone https://github.com/jheyer23/python_gdal.git


#------- OTHER GIT COMMANDS -----#

# Set remote git origin
git remote set-url origin https://github.com/jheyer23/python_gdal.git
asdfasd
# Remove local .git
rm -rf .git/

# Git version
git --version


## Create a file in git repository that can be modified in Atoms
## If close out of Atom and reopen the file should be highlighted green meaning it can be modified and is ready for staging
λ touch index.html

# Open file in Atom
Atom index.html

## Add file to staging
λ git add index.html

## Can remove files that don't want in staging areas
λ git rm --cached index.html



## Why have staging area?
  - Extra blanket of security. Not committing them hastily
  - Have to add them to staging area
  - Commit at logical points
